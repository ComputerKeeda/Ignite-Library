syntax = "proto3";

package library.library;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "library/library/params.proto";
import "library/library/author.proto";

option go_package = "library/x/library/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/library/library/params";
  
  }
  
  // Queries a list of ListPost items.
  rpc ListPost (QueryListPostRequest) returns (QueryListPostResponse) {
    option (google.api.http).get = "/library/library/list_post";
  
  }
  
  // Queries a list of ListAuthor items.
  rpc ListAuthor (QueryListAuthorRequest) returns (QueryListAuthorResponse) {
    option (google.api.http).get = "/library/library/list_author";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryListPostRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryListPostResponse {
  Author                                 author     = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryListAuthorRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryListAuthorResponse {
  repeated Author author = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

